---
name: Standalone Build

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["dev"]
  workflow_dispatch:

defaults:
  run:
    shell: cmd

env:
  ARTIFACT: openterfaceQT-standalone.exe
  SOURCE_DIR: ${{ github.workspace }}
  QT_VERSION: 6.5.3 
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies for Building Qt
        run: |
          choco install git cmake ninja

      - name: Clone Qt Source
        run: |
          git clone https://code.qt.io/qt/qt5.git
          cd qt5
          git checkout v${{ env.QT_VERSION }}

      - name: Build Qt Statically
        run: |
          cd qt5
          mkdir build
          cd build
          ../configure -static -release -opensource -confirm-license -nomake examples -nomake tests -platform win32-g++ -prefix ${{ runner.temp }}/Qt
          cmake --build . --config Release
          cmake --install . --config Release

      - name: Cache Qt Build
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/Qt
          key: qt-6.5.3-mingw-windows-static
          restore-keys: |
            qt-6.5.3-mingw-windows-static

      - name: Create build directory
        run: mkdir ${{ runner.temp }}\build

      - name: Build Standalone Executable
        working-directory: ${{ runner.temp }}\build
        run: |
          echo "Building with qmake..."
          set PATH=${{ runner.temp }}\\Qt\\${{ env.QT_VERSION }}\\mingw_64\\bin;%PATH%
          qmake -r ${{ env.SOURCE_DIR }}\openterfaceQT.pro
          if errorlevel 1 exit /b 1
          
          echo "Building with mingw32-make..."
          mingw32-make -j2
          if errorlevel 1 exit /b 1
          
          if not exist release\openterfaceQT.exe (
            echo "Error: Failed to build openterfaceQT.exe"
            exit 1
          )
          
          echo "Creating standalone package..."
          mkdir package
          copy release\openterfaceQT.exe package

          echo "Copying platform plugins..."
          mkdir platforms
          copy D:/a/_temp/Qt/6.5.3/mingw_64/plugins/platforms/qwindows.dll platforms

          echo "Running windeployqt for standalone build..."
          cd package
          windeployqt --qmldir ${{ env.SOURCE_DIR }} openterfaceQT.exe --compiler-runtime
          
      - name: Save build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}\build\package\openterfaceQT.exe
          if-no-files-found: error 